// Mocks generated by Mockito 5.4.5 from annotations
// in inteliteacher/test/repositories/auth/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:inteliteacher/data/repositories/auth/auth_repository.dart'
    as _i2;
import 'package:inteliteacher/model/entities/auth/auth_user_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:result_dart/result_dart.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>>
  signInWithEmailAndPassword(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [email, password]),
            returnValue:
                _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>>.value(
                  _i6.dummyValue<_i4.ResultDart<_i5.AuthUserModel, Exception>>(
                    this,
                    Invocation.method(#signInWithEmailAndPassword, [
                      email,
                      password,
                    ]),
                  ),
                ),
          )
          as _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i4.Unit, Exception>> signUpWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmailAndPassword, [email, password]),
            returnValue: _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<_i4.Unit, Exception>>(
                this,
                Invocation.method(#signUpWithEmailAndPassword, [
                  email,
                  password,
                ]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i4.Unit, Exception>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<_i4.Unit, Exception>>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<bool, Exception>> isSignedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isSignedIn, []),
            returnValue: _i3.Future<_i4.ResultDart<bool, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<bool, Exception>>(
                this,
                Invocation.method(#isSignedIn, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<bool, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>> getUser() =>
      (super.noSuchMethod(
            Invocation.method(#getUser, []),
            returnValue:
                _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>>.value(
                  _i6.dummyValue<_i4.ResultDart<_i5.AuthUserModel, Exception>>(
                    this,
                    Invocation.method(#getUser, []),
                  ),
                ),
          )
          as _i3.Future<_i4.ResultDart<_i5.AuthUserModel, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i4.Unit, Exception>> updatePassword(
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [password]),
            returnValue: _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<_i4.Unit, Exception>>(
                this,
                Invocation.method(#updatePassword, [password]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<_i4.Unit, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<bool, Exception>> hasCompletedRegistration() =>
      (super.noSuchMethod(
            Invocation.method(#hasCompletedRegistration, []),
            returnValue: _i3.Future<_i4.ResultDart<bool, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<bool, Exception>>(
                this,
                Invocation.method(#hasCompletedRegistration, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<bool, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<String, Exception>> updateDisplayName(
    String? name,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [name]),
            returnValue: _i3.Future<_i4.ResultDart<String, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<String, Exception>>(
                this,
                Invocation.method(#updateDisplayName, [name]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<String, Exception>>);
}
