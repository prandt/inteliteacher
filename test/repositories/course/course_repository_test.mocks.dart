// Mocks generated by Mockito 5.4.5 from annotations
// in inteliteacher/test/repositories/course/course_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:inteliteacher/data/repositories/course/course_repository.dart'
    as _i2;
import 'package:inteliteacher/model/entities/course/course_model.dart' as _i5;
import 'package:inteliteacher/model/entities/student/student_model.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:result_dart/result_dart.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CourseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRepository extends _i1.Mock implements _i2.CourseRepository {
  MockCourseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ResultDart<List<_i5.CourseModel>, Exception>> list() =>
      (super.noSuchMethod(
            Invocation.method(#list, []),
            returnValue: _i3.Future<
              _i4.ResultDart<List<_i5.CourseModel>, Exception>
            >.value(
              _i6.dummyValue<_i4.ResultDart<List<_i5.CourseModel>, Exception>>(
                this,
                Invocation.method(#list, []),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<List<_i5.CourseModel>, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>> get(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#get, [id]),
            returnValue:
                _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>>.value(
                  _i6.dummyValue<_i4.ResultDart<_i5.CourseModel, Exception>>(
                    this,
                    Invocation.method(#get, [id]),
                  ),
                ),
          )
          as _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>> create(
    _i5.CreateCourseRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#create, [request]),
            returnValue:
                _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>>.value(
                  _i6.dummyValue<_i4.ResultDart<_i5.CourseModel, Exception>>(
                    this,
                    Invocation.method(#create, [request]),
                  ),
                ),
          )
          as _i3.Future<_i4.ResultDart<_i5.CourseModel, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<String, Exception>> delete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i3.Future<_i4.ResultDart<String, Exception>>.value(
              _i6.dummyValue<_i4.ResultDart<String, Exception>>(
                this,
                Invocation.method(#delete, [id]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<String, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<List<_i7.StudentModel>, Exception>> listStudents(
    String? courseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listStudents, [courseId]),
            returnValue: _i3.Future<
              _i4.ResultDart<List<_i7.StudentModel>, Exception>
            >.value(
              _i6.dummyValue<_i4.ResultDart<List<_i7.StudentModel>, Exception>>(
                this,
                Invocation.method(#listStudents, [courseId]),
              ),
            ),
          )
          as _i3.Future<_i4.ResultDart<List<_i7.StudentModel>, Exception>>);

  @override
  _i3.Future<_i4.ResultDart<_i7.StudentModel, Exception>> addStudent(
    _i7.CreateStudentRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addStudent, [request]),
            returnValue:
                _i3.Future<_i4.ResultDart<_i7.StudentModel, Exception>>.value(
                  _i6.dummyValue<_i4.ResultDart<_i7.StudentModel, Exception>>(
                    this,
                    Invocation.method(#addStudent, [request]),
                  ),
                ),
          )
          as _i3.Future<_i4.ResultDart<_i7.StudentModel, Exception>>);
}
